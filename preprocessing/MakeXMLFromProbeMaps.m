function MakeXMLFromProbeMaps(basepath)
%MakeXMLFromProbeMaps - Generate a .xml file to accompany .dat files for a
%recording in the neuroscope/klusters/ndmanager system.  Uses a library of
%probe map layouts.
%
%  USAGE
%
%    MakeXMLFromProbeMaps(basepath)
%
%    Writes a standardized .xml file based on a user-selection of probe
%    maps and in a sequence specified by the user (ie 64site probe first
%    then 32site probe second).  Probe maps can be found at:
%    /buzcode/tree/master/generalComputation/geometries
%
%  INPUT
%
%    basepath       path to directory to which to write output xml file and
%                   where to potentially find .rhd file 
%
%  OUTPUT
%
%    (.xml file written to disk at basepath)
%
%  SEE
%
%    See also 
% Copyright (C) 2017 Brendon Watson
%
% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation; either version 3 of the License, or
% (at your option) any later version.

%% Define text components to assemble later
header = {'<?xml version=''1.0''?>';...
'<parameters version=''1.0'' creator=''MakeXMLFromProbeMaps.m''>';...
 '<acquisitionSystem>';...
  '<nBits>16</nBits>';...
  '<nChannels>1</nChannels>';...
  '<samplingRate>20000</samplingRate>';...
  '<voltageRange>20</voltageRange>';...
  '<amplification>1000</amplification>';...
  '<offset>0</offset>';...
 '</acquisitionSystem>';...
 '<fieldPotentials>';...
  '<lfpSamplingRate>1250</lfpSamplingRate>';...
 '</fieldPotentials>';...
 '<anatomicalDescription>';...
  '<channelGroups>'};
anatomygroupstart = '<group>';%repeats w every new anatomical group
anatomychannelnumberline_start = ['<channel skip="0">'];%for each channel in an anatomical group - first part of entry
anatomychannelnumberline_end = ['</channel>'];%for each channel in an anatomical group - last part of entry
anatomygroupend = '</group>';%comes at end of each anatomical group

anatomyspikegroupinterface = {' </anatomicalDescription>';...
 '<spikeDetection>';...
  '<channelGroups>'};%comes after anatomical groups and before spike groups

spikegroupstart = {'<group>';...
        '<channels>'};%repeats w every new spike group
spikechannelnumberline_start = ['<channel>'];%for each channel in a spike group - first part of entry
spikechannelnumberline_end = ['</channel>'];%for each channel in a spike group - last part of entry
spikegroupend = {'</channels>';...
    '</group>'};%comes at end of each spike group

footer = {'</channelGroups>';...
 '</spikeDetection>';...
 '<neuroscope version="2.0.0">';...
  '<miscellaneous>';...
   '<screenGain>0.2</screenGain>';...
   '<traceBackgroundImage></traceBackgroundImage>';...
  '</miscellaneous>';...
  '<video>';...
   '<rotate>0</rotate>';...
   '<flip>0</flip>';...
   '<videoImage></videoImage>';...
   '<positionsBackground>0</positionsBackground>';...
  '</video>';...
  '<spikes>';...
   '<nSamples>32</nSamples>';...
   '<peakSampleIndex>16</peakSampleIndex>';...
  '</spikes>';...
  '<channels>';...
   '<channelColors>';...
    '<channel>0</channel>';...
    '<color>#0080ff</color>';...
    '<anatomyColor>#0080ff</anatomyColor>';...
    '<spikeColor>#0080ff</spikeColor>';...
   '</channelColors>';...
   '<channelOffset>';...
    '<channel>0</channel>';...
    '<defaultOffset>0</defaultOffset>';...
   '</channelOffset>';...
  '</channels>';...
 '</neuroscope>';...
'</parameters>'};

lineend = '\n';

%% Gather probe maps


%% Make basic text 
s = header;

for gidx = each group
    s = {s; anatomygroupstart};
    for chidx = 1 : numchansingroup
        thischan = xyz;
        s = {s; [anatomychannelnumberline_start, num2str(thischan) anatomychannelnumberline_end]};
    end
    s = {s, anatomygroupend};
end

s = {s, anatomyspikegroupinterface};

for gidx = each group
    s = {s; spikegroupstart};
    for chidx = 1 : numchansingroup
        thischan = xyz;
        s = {s; [spikechannelnumberline_start, num2str(thischan) spikechannelnumberline_end]};
    end
    s = {s, anatomygroupend};
end
 
s = {s,footer};

%% Format and output

